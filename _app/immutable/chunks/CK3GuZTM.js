const w=/^(\[)?(\.\.\.)?(\w+)(?:=(\w+))?(\])?$/;function x(t){const i=[];return{pattern:t==="/"?/^\/$/:new RegExp(`^${_(t).map(s=>{const o=/^\[\.\.\.(\w+)(?:=(\w+))?\]$/.exec(s);if(o)return i.push({name:o[1],matcher:o[2],optional:!1,rest:!0,chained:!0}),"(?:/([^]*))?";const l=/^\[\[(\w+)(?:=(\w+))?\]\]$/.exec(s);if(l)return i.push({name:l[1],matcher:l[2],optional:!0,rest:!1,chained:!0}),"(?:/([^/]+))?";if(!s)return;const r=s.split(/\[(.+?)\](?!\])/);return"/"+r.map((e,n)=>{if(n%2){if(e.startsWith("x+"))return h(String.fromCharCode(parseInt(e.slice(2),16)));if(e.startsWith("u+"))return h(String.fromCharCode(...e.slice(2).split("-").map(g=>parseInt(g,16))));const c=w.exec(e),[,u,p,m,d]=c;return i.push({name:m,matcher:d,optional:!!u,rest:!!p,chained:p?n===1&&r[0]==="":!1}),p?"([^]*?)":u?"([^/]*)?":"([^/]+?)"}return h(e)}).join("")}).join("")}/?$`),params:i}}function $(t){return t!==""&&!/^\([^)]+\)$/.test(t)}function _(t){return t.slice(1).split("/").filter($)}function j(t,i,f){const s={},o=t.slice(1),l=o.filter(a=>a!==void 0);let r=0;for(let a=0;a<i.length;a+=1){const e=i[a];let n=o[a-r];if(e.chained&&e.rest&&r&&(n=o.slice(a-r,a+1).filter(c=>c).join("/"),r=0),n===void 0){e.rest&&(s[e.name]="");continue}if(!e.matcher||f[e.matcher](n)){s[e.name]=n;const c=i[a+1],u=o[a+1];c&&!c.rest&&c.optional&&u&&e.chained&&(r=0),!c&&!u&&Object.keys(s).length===l.length&&(r=0);continue}if(e.optional&&e.chained){r++;continue}return}if(!r)return s}function h(t){return t.normalize().replace(/[[\]]/g,"\\$&").replace(/%/g,"%25").replace(/\//g,"%2[Ff]").replace(/\?/g,"%3[Ff]").replace(/#/g,"%23").replace(/[.*+?^${}()|\\]/g,"\\$&")}const b=/\[(\[)?(\.\.\.)?(\w+?)(?:=(\w+))?\]\]?/g;function W(t,i){const f=_(t),s=t!="/"&&t.endsWith("/");return"/"+f.map(o=>o.replace(b,(l,r,a,e)=>{const n=i[e];if(!n){if(r||a&&n!==void 0)return"";throw new Error(`Missing parameter '${e}' in route ${t}`)}if(n.startsWith("/")||n.endsWith("/"))throw new Error(`Parameter '${e}' in route ${t} cannot start or end with a slash -- this would cause an invalid route like foo//bar`);return n})).filter(Boolean).join("/")+(s?"/":"")}const v=globalThis.__sveltekit_1baa98b?.base??"/proyecto-arcana",k=globalThis.__sveltekit_1baa98b?.assets??v??"";export{k as a,v as b,j as e,x as p,W as r};
